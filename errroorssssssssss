Got it, Likhitha! Here's the **full fixed code for each component’s `.ts` file** — copy and paste directly into your VS Code.

---

## ✅ 1. `all-doctors.component.ts`

```ts
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';

@Component({
  selector: 'app-all-doctors',
  standalone: true,
  imports: [CommonModule],
  templateUrl: './all-doctors.component.html',
  styleUrls: ['./all-doctors.component.css']
})
export class AllDoctorsComponent {
  doctors: string[] = ['Dr. Arjun', 'Dr. Priya', 'Dr. Ramya'];
}
```

---

## ✅ 2. `login.component.ts`

```ts
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-login',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent {
  email = '';
  password = '';
  error = '';
}
```

---

## ✅ 3. `register.component.ts`

```ts
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-register',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './register.component.html',
  styleUrls: ['./register.component.css']
})
export class RegisterComponent {
  error = '';
  success = '';
  form = {
    name: '',
    gender: '',
    phone: '',
    email: '',
    password: '',
    role: '',
    specialization: '',
    qualification: '',
    roomNumber: '',
    disease: '',
    place: ''
  };
}
```

---

## ✅ 4. `book-appointment.component.ts`

```ts
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-book-appointment',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './book-appointment.component.html',
  styleUrls: ['./book-appointment.component.css']
})
export class BookAppointmentComponent {
  selectedDoctor = '';
  appointmentDate = '';
  selectedTime = '';
  message = '';
  doctors: string[] = ['Dr. Arjun', 'Dr. Priya'];
  timeSlots: string[] = ['10:00 AM', '11:00 AM'];
}
```

---

## ✅ 5. `dashboard-doctor.component.ts`

```ts
import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { AppointmentService } from '../../services/appointment/appointment.service';
import { AuthService } from '../../services/auth/auth.service';

@Component({
  selector: 'app-dashboard-doctor',
  standalone: true,
  imports: [CommonModule],
  templateUrl: './dashboard-doctor.component.html',
  styleUrls: ['./dashboard-doctor.component.css']
})
export class DashboardDoctorComponent implements OnInit {
  appointments: any[] = [];
  message = '';

  constructor(
    private appointmentService: AppointmentService,
    private authService: AuthService
  ) {}

  ngOnInit(): void {
    const doctorId = this.authService.getUserIdFromToken();
    if (!doctorId) {
      this.message = 'You must be logged in.';
      return;
    }

    this.appointmentService.getAppointmentsForDoctor(doctorId).subscribe({
      next: (res: any[]) => {
        this.appointments = res;
      },
      error: () => {
        this.message = 'Could not load appointments.';
      }
    });
  }

  toggleStatus(appointment: any): void {
    const newStatus = appointment.status === 'COMPLETED' ? 'BOOKED' : 'COMPLETED';
    this.appointmentService.updateAppointmentStatus(appointment.appointmentId, newStatus).subscribe({
      next: () => {
        appointment.status = newStatus;
      }
    });
  }
}
```

---

## ✅ 6. `dashboard-patient.component.ts`

```ts
import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { AppointmentService } from '../../services/appointment/appointment.service';
import { AuthService } from '../../services/auth/auth.service';

@Component({
  selector: 'app-dashboard-patient',
  standalone: true,
  imports: [CommonModule],
  templateUrl: './dashboard-patient.component.html',
  styleUrls: ['./dashboard-patient.component.css']
})
export class DashboardPatientComponent implements OnInit {
  appointments: any[] = [];
  message = '';

  constructor(
    private appointmentService: AppointmentService,
    private authService: AuthService
  ) {}

  ngOnInit(): void {
    const patientId = this.authService.getUserIdFromToken();
    if (!patientId) {
      this.message = 'You must be logged in.';
      return;
    }

    this.appointmentService.getAppointmentsForPatient(patientId).subscribe({
      next: (res: any[]) => {
        this.appointments = res;
      },
      error: () => {
        this.message = 'Could not load appointments.';
      }
    });
  }

  cancel(appointmentId: number): void {
    this.appointmentService.cancelAppointment(appointmentId).subscribe({
      next: () => {
        this.appointments = this.appointments.filter(appt => appt.appointmentId !== appointmentId);
      }
    });
  }
}
```

---

✅ Now all components support:

* `*ngIf`, `*ngFor` (with `CommonModule`)
* `[(ngModel)]` (with `FormsModule`)

You can now run:

```bash
ng serve
```

And everything should work without any NG8001/NG8002/NG8103 errors. Let me know if you want me to help fix the `app-header` or `app-footer` errors too!
