import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class AppointmentService {
  private baseUrl = 'http://localhost:8083/Whospitals/profile'; // Use your correct Eureka base path

  constructor(private http: HttpClient) {}

  private authHeaders(): HttpHeaders {
    const token = localStorage.getItem('token');
    return new HttpHeaders().set('Authorization', `Bearer ${token}`);
  }

  // ✅ Book appointment
  bookAppointment(data: any): Observable<any> {
    return this.http.post(`${this.baseUrl}/appointments/book`, data, {
      headers: this.authHeaders()
    });
  }

  // ✅ Get appointments for a patient
  getAppointmentsForPatient(patientId: number): Observable<any[]> {
    return this.http.get<any[]>(`${this.baseUrl}/appointments/patient/${patientId}`, {
      headers: this.authHeaders()
    });
  }

  // ✅ Get appointments for a doctor
  getAppointmentsForDoctor(doctorId: number): Observable<any[]> {
    return this.http.get<any[]>(`${this.baseUrl}/appointments/doctor/${doctorId}`, {
      headers: this.authHeaders()
    });
  }

  // ✅ Get appointment by ID
  getAppointmentById(appointmentId: number): Observable<any> {
    return this.http.get(`${this.baseUrl}/appointments/view/${appointmentId}`, {
      headers: this.authHeaders()
    });
  }

  // ✅ Cancel appointment
  cancelAppointment(appointmentId: number): Observable<any> {
    return this.http.put(`${this.baseUrl}/appointments/cancel/${appointmentId}`, {}, {
      headers: this.authHeaders()
    });
  }

  // ✅ Update follow-up / status
  updateAppointmentStatus(appointmentId: number, status: string): Observable<any> {
    const body = { followUp: status === 'COMPLETED' }; // Based on your backend DTO logic
    return this.http.put(`${this.baseUrl}/appointments/update/followUp/update/${appointmentId}`, body, {
      headers: this.authHeaders()
    });
  }

  // ✅ Update appointment details (date/time etc.)
  updateAppointmentDetails(appointmentId: number, data: any): Observable<any> {
    return this.http.put(`${this.baseUrl}/appointments/update/${appointmentId}`, data, {
      headers: this.authHeaders()
    });
  }
}
